permissions: write-all
name: Production Deployments
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-ship:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        run: |
          docker build -t statbus:latest .

      - name: Save Docker image to tarball
        run: |
          docker save statbus:latest -o statbus.tar

      - name: Rsync image to remote server
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avz --progress
          path: statbus.tar
          remote_path: /home/${{ secrets.DEPLOY_USER }}/statbus.tar
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: SSH and deploy container with docker-compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e

            echo "::group::Stop old container"
            docker compose -f ~/serv/docker-compose.yml stop statbus || true
            docker compose -f ~/serv/docker-compose.yml rm -f statbus || true
            docker image rm statbus:latest --force || true
            echo "::endgroup::"

            echo "::group::Load new image"
            docker image load --input ~/statbus.tar
            rm -f ~/statbus.tar
            echo "::endgroup::"

            echo "::group::Deploy container"
            cd ~/serv
            docker compose -f ~/serv/docker-compose.yml up -d statbus
            echo "::endgroup::"

            echo "::group::Run migrations"
            docker compose -f ~/serv/docker-compose.yml exec -T statbus php bin/console doctrine:migrations:migrate --no-interaction --em=statbus
            echo "::endgroup::"

            echo "::group::Clear cache"
            docker compose -f ~/serv/docker-compose.yml exec -T statbus php bin/console cache:clear
            echo "::endgroup::"

            echo "✅ Production deployment done via Traefik!"

  render-icons:
    runs-on: ubuntu-latest
    needs: build-and-ship

    steps:
      - name: SSH and re-render icons from DMIs
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            set -e
            echo "::group::Update tgstation repo"
            cd ~/tgstation
            git reset --hard HEAD
            git pull
            echo "::endgroup::"

            echo "::group::Render icons"
            docker compose -f ~/serv/docker-compose.yml exec -T statbus php bin/console app:render-icons
            echo "::endgroup::"

            echo "✅ Badger icons have been rendered!"
